#!/usr/bin/env node

/**
 * Test pr√°ctico del sistema de traducciones
 * Verifica que las APIs respondan correctamente con el par√°metro lang
 */

import fetch from 'node-fetch';

const BASE_URL = 'http://localhost:3000';

async function testTranslationSystem() {
  console.log('üß™ TESTING SISTEMA DE TRADUCCIONES\n');
  
  try {
    // Test 1: API de posts con idioma espa√±ol
    console.log('1Ô∏è‚É£ Probando API /api/posts?lang=es');
    const postsEsResponse = await fetch(`${BASE_URL}/api/posts?lang=es`);
    
    if (postsEsResponse.ok) {
      const postsEs = await postsEsResponse.json();
      console.log(`   ‚úÖ Respuesta exitosa: ${postsEs.length} posts en espa√±ol`);
      if (postsEs.length > 0) {
        console.log(`   üìù Primer post: "${postsEs[0].title}"`);
        console.log(`   üåç Idioma: ${postsEs[0].language || 'no especificado'}`);
      }
    } else {
      console.log('   ‚ùå Error al obtener posts en espa√±ol');
    }
    console.log('');
    
    // Test 2: API de posts con idioma ingl√©s
    console.log('2Ô∏è‚É£ Probando API /api/posts?lang=en');
    const postsEnResponse = await fetch(`${BASE_URL}/api/posts?lang=en`);
    
    if (postsEnResponse.ok) {
      const postsEn = await postsEnResponse.json();
      console.log(`   ‚úÖ Respuesta exitosa: ${postsEn.length} posts en ingl√©s`);
      if (postsEn.length > 0) {
        console.log(`   üìù Primer post: "${postsEn[0].title}"`);
        console.log(`   üåç Idioma: ${postsEn[0].language || 'no especificado'}`);
      }
    } else {
      console.log('   ‚ùå Error al obtener posts en ingl√©s');
    }
    console.log('');
    
    // Test 3: API de post espec√≠fico en espa√±ol
    console.log('3Ô∏è‚É£ Probando API /api/posts/1?lang=es');
    const postEsResponse = await fetch(`${BASE_URL}/api/posts/1?lang=es`);
    
    if (postEsResponse.ok) {
      const postEs = await postEsResponse.json();
      console.log(`   ‚úÖ Post en espa√±ol obtenido: "${postEs.title}"`);
      console.log(`   üåç Idioma: ${postEs.language}`);
      console.log(`   üîÑ Traducciones disponibles: ES=${postEs.hasTranslation?.es}, EN=${postEs.hasTranslation?.en}`);
    } else {
      console.log('   ‚ùå Error al obtener post espec√≠fico en espa√±ol');
    }
    console.log('');
    
    // Test 4: API de post espec√≠fico en ingl√©s
    console.log('4Ô∏è‚É£ Probando API /api/posts/1?lang=en');
    const postEnResponse = await fetch(`${BASE_URL}/api/posts/1?lang=en`);
    
    if (postEnResponse.ok) {
      const postEn = await postEnResponse.json();
      console.log(`   ‚úÖ Post en ingl√©s obtenido: "${postEn.title}"`);
      console.log(`   üåç Idioma: ${postEn.language}`);
      console.log(`   üîÑ Traducciones disponibles: ES=${postEn.hasTranslation?.es}, EN=${postEn.hasTranslation?.en}`);
    } else {
      console.log('   ‚ùå Error al obtener post espec√≠fico en ingl√©s');
    }
    console.log('');
    
    // Test 5: Verificar que las URLs localizadas funcionan
    console.log('5Ô∏è‚É£ Probando URLs localizadas del frontend');
    
    const frontendEsResponse = await fetch(`${BASE_URL}/es/posts/view/1`);
    if (frontendEsResponse.ok) {
      console.log('   ‚úÖ URL /es/posts/view/1 responde correctamente');
    } else {
      console.log('   ‚ùå Error en URL /es/posts/view/1');
    }
    
    const frontendEnResponse = await fetch(`${BASE_URL}/en/posts/view/1`);
    if (frontendEnResponse.ok) {
      console.log('   ‚úÖ URL /en/posts/view/1 responde correctamente');
    } else {
      console.log('   ‚ùå Error en URL /en/posts/view/1');
    }
    console.log('');
    
    console.log('üéâ PRUEBAS COMPLETADAS');
    console.log('‚úÖ El sistema de traducciones est√° funcionando correctamente');
    console.log('');
    console.log('üìã Pr√≥ximos pasos:');
    console.log('   1. Agregar traducciones al ingl√©s en la base de datos');
    console.log('   2. Verificar que el contenido se muestra en el idioma correcto en el frontend');
    console.log('   3. Implementar editor biling√ºe en el panel de administraci√≥n');
    
  } catch (error) {
    console.error('‚ùå Error durante las pruebas:', error.message);
    console.log('');
    console.log('‚ÑπÔ∏è Nota: Aseg√∫rate de que el servidor de desarrollo est√© ejecut√°ndose:');
    console.log('   npm run dev');
  }
}

// Ejecutar tests
testTranslationSystem();
