# üéØ REGLAS DEL PROYECTO - SingularCMS

## üìö FUENTE √öNICA DE VERDAD: STORYBOOK

**IMPORTANTE:** El Design System SOLO existe en Storybook.

### ‚úÖ REGLA #1: Design System

**NUNCA crear archivos MD para Design System.**

- ‚ùå **NO CREAR:** `DESIGN_SYSTEM_*.md`, `TOKENS_*.md`, `*_AUDIT.md`
- ‚úÖ **USAR SIEMPRE:** `stories/DesignSystem.stories.tsx`

**Cualquier documentaci√≥n, auditor√≠a, plan o an√°lisis del Design System debe ir directamente en:**
```
stories/DesignSystem.stories.tsx
```

**Antes de crear un MD, preg√∫ntate:**
- ¬øEs sobre Design System, tokens, estilos, colores, spacing?
- ‚Üí **S√ç:** Editar `stories/DesignSystem.stories.tsx`
- ‚Üí **NO:** Solo entonces considerar MD

### ‚úÖ REGLA #2: Tokens

**Los tokens SOLO se definen en:**
```
styles/tokens.css
```

**Los tokens SOLO se documentan en:**
```
stories/DesignSystem.stories.tsx
```

**Storybook lee tokens din√°micamente con `getCSSVar()`:**
```tsx
const getCSSVar = (varName: string) => {
  return getComputedStyle(document.documentElement)
    .getPropertyValue(varName).trim();
};
```

### ‚úÖ REGLA #3: Auditor√≠as y Planes (SIN M√âTRICAS)

**Toda auditor√≠a, an√°lisis u optimizaci√≥n del Design System:**
- ‚ùå NO crear MD temporal
- ‚ùå NO incluir m√©tricas num√©ricas (140 tokens, 49 usados, 35%, etc.)
- ‚úÖ Integrar directamente en Storybook como nueva secci√≥n o subsecci√≥n
- ‚úÖ Usar descripciones cualitativas

**Ejemplo CORRECTO:**
```tsx
// Agregar secci√≥n "Auditor√≠a" en DesignSystem.stories.tsx
<section>
  <h2>üìä Auditor√≠a de Tokens</h2>
  <p>Muchos tokens est√°n definidos pero no se usan...</p>
</section>
```

**Ejemplo INCORRECTO:**
```tsx
// ‚ùå NO hacer esto:
<div>140 Tokens Definidos</div>
<div>49 Tokens Usados</div>
<div>35% Utilizaci√≥n</div>
```

### ‚úÖ REGLA #4: MDs Existentes

**Los MDs existentes del Design System son PROXIES:**
```
DESIGN_SYSTEM_README.md ‚Üí Proxy a Storybook
DESIGN_SYSTEM_COLORS_UPDATE.md ‚Üí Proxy a Storybook
DESIGN_SYSTEM_MIGRATION.md ‚Üí Proxy a Storybook
```

**NO editar estos proxies. Son solo referencias.**

### ‚úÖ REGLA #5: Workflow

**Cuando necesites documentar algo del Design System:**

1. Abrir `stories/DesignSystem.stories.tsx`
2. Agregar contenido como nueva secci√≥n o actualizar existente
3. Usar `getCSSVar()` para valores din√°micos
4. Guardar y verificar en Storybook

**NUNCA:**
- Crear `DESIGN_SYSTEM_*.md`
- Crear `TOKENS_*.md`
- Crear `*_OPTIMIZATION_*.md`
- Crear auditor√≠as en MD

---

## üìã OTRAS REGLAS DEL PROYECTO

### Commits
- NO commits autom√°ticos sin permiso expl√≠cito del usuario
- NO force push a main/master
- NO skip hooks

### Git
- NO modificar git config
- NO destructive operations sin confirmaci√≥n

### Espa√±ol
- Siempre responder en espa√±ol
- Documentaci√≥n en espa√±ol cuando sea posible

---

## üé® ESTRUCTURA DEL DESIGN SYSTEM

```
styles/
  ‚îú‚îÄ‚îÄ tokens.css          # Definici√≥n de tokens (fuente de verdad)
  ‚îî‚îÄ‚îÄ utilities.css       # Utility classes

stories/
  ‚îî‚îÄ‚îÄ DesignSystem.stories.tsx  # Documentaci√≥n completa (fuente √∫nica)

app/layout.tsx            # Imports de tokens y utilities
```

**Flujo:**
```
tokens.css ‚Üí Storybook (getCSSVar) ‚Üí Documentaci√≥n actualizada
```

---

## ‚ö†Ô∏è RECORDATORIO

**Antes de crear cualquier archivo relacionado con Design System:**

1. ¬øEs sobre tokens, colores, spacing, estilos?
2. ‚Üí **S√ç:** Editar `stories/DesignSystem.stories.tsx`
3. ‚Üí **NO:** Continuar

**Storybook es la fuente √∫nica de verdad para el Design System.**

---

**√öltima actualizaci√≥n:** 12 Octubre 2025
